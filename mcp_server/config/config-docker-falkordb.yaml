# Graphiti MCP Server Configuration for Docker with FalkorDB
# This configuration is optimized for running with docker-compose-falkordb.yml

server:
  transport: "sse"  # SSE for HTTP access from Docker
  host: "0.0.0.0"
  port: 8000
  
llm:
  provider: "openai"  # Options: openai, azure_openai, anthropic, gemini, groq
  model: "gpt-4o"
  temperature: 0.0
  max_tokens: 4096
  
  providers:
    openai:
      api_key: ${OPENAI_API_KEY}
      api_url: ${OPENAI_API_URL:https://api.openai.com/v1}
      organization_id: ${OPENAI_ORGANIZATION_ID:}
      
    azure_openai:
      api_key: ${AZURE_OPENAI_API_KEY}
      api_url: ${AZURE_OPENAI_ENDPOINT}
      api_version: ${AZURE_OPENAI_API_VERSION:2024-10-21}
      deployment_name: ${AZURE_OPENAI_DEPLOYMENT}
      use_azure_ad: ${USE_AZURE_AD:false}
      
    anthropic:
      api_key: ${ANTHROPIC_API_KEY}
      api_url: ${ANTHROPIC_API_URL:https://api.anthropic.com}
      max_retries: 3
      
    gemini:
      api_key: ${GOOGLE_API_KEY}
      project_id: ${GOOGLE_PROJECT_ID:}
      location: ${GOOGLE_LOCATION:us-central1}
      
    groq:
      api_key: ${GROQ_API_KEY}
      api_url: ${GROQ_API_URL:https://api.groq.com/openai/v1}

embedder:
  provider: "openai"  # Options: openai, azure_openai, gemini, voyage
  model: "text-embedding-ada-002"
  dimensions: 1536
  
  providers:
    openai:
      api_key: ${OPENAI_API_KEY}
      api_url: ${OPENAI_API_URL:https://api.openai.com/v1}
      organization_id: ${OPENAI_ORGANIZATION_ID:}
      
    azure_openai:
      api_key: ${AZURE_OPENAI_API_KEY}
      api_url: ${AZURE_OPENAI_EMBEDDINGS_ENDPOINT}
      api_version: ${AZURE_OPENAI_API_VERSION:2024-10-21}
      deployment_name: ${AZURE_OPENAI_EMBEDDINGS_DEPLOYMENT}
      use_azure_ad: ${USE_AZURE_AD:false}
      
    gemini:
      api_key: ${GOOGLE_API_KEY}
      project_id: ${GOOGLE_PROJECT_ID:}
      location: ${GOOGLE_LOCATION:us-central1}
      
    voyage:
      api_key: ${VOYAGE_API_KEY}
      api_url: ${VOYAGE_API_URL:https://api.voyageai.com/v1}
      model: "voyage-3"

database:
  provider: "falkordb"  # Using FalkorDB for this configuration
  
  providers:
    falkordb:
      # Use environment variable if set, otherwise use Docker service hostname
      uri: ${FALKORDB_URI:redis://falkordb:6379}
      password: ${FALKORDB_PASSWORD:}
      database: ${FALKORDB_DATABASE:default_db}

graphiti:
  group_id: ${GRAPHITI_GROUP_ID:main}
  episode_id_prefix: ${EPISODE_ID_PREFIX:}
  user_id: ${USER_ID:mcp_user}
  entity_types:
    - name: "Requirement"
      description: "Represents a requirement"
    - name: "Preference"
      description: "User preferences and settings"
    - name: "Procedure"
      description: "Standard operating procedures"