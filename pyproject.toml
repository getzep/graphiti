[project]
name = "graphiti-core"
description = "A temporal graph building library, with supplementary CLI tools for direct interaction"
version = "0.10.5"
authors = [
    { "name" = "Paul Paliychuk", "email" = "paul@getzep.com" },
    { "name" = "Preston Rasmussen", "email" = "preston@getzep.com" },
    { "name" = "Daniel Chalef", "email" = "daniel@getzep.com" },
]
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.10,<4"
packages = [
    { include = "graphiti_core", from = "." },
    { include = "cli", from = "." },
]
dependencies = [
    "pydantic>=2.8.2",
    "neo4j>=5.23.0",
    "diskcache>=5.6.3",
    "openai>=1.53.0",
    "tenacity>=9.0.0",
    "numpy>=1.0.0",
    "python-dotenv>=1.0.1",
    "graph-service (>=1.0.0.7,<2.0.0.0)",
    "typer>=0.15.0",
    "rich>=13.7.0",
]

[project.scripts]
graphiti = "cli.main:app"

[project.urls]
Homepage = "https://help.getzep.com/graphiti/graphiti/overview"
Repository = "https://github.com/getzep/graphiti"
Documentation = "https://help.getzep.com/graphiti/cli/overview"

[project.optional-dependencies]
anthropic = ["anthropic>=0.49.0"]
groq = ["groq>=0.2.0"]
google-genai = ["google-genai>=1.8.0"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
requires-poetry = ">=2.0"

[tool.poetry.scripts]
graphiti = "cli.main:app"

[tool.pytest.ini_options]
pythonpath = ["."]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = ["E501"]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
docstring-code-format = true
