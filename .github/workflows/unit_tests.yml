name: Unit and Integration Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: depot-ubuntu-22.04
    environment: development
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Load cached Poetry installation
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Run unit tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: poetry run pytest -m "not integration" -v

  integration-tests:
    name: Integration Tests
    runs-on: depot-ubuntu-22.04
    environment: development
    services:
      neo4j:
        image: neo4j:5
        env:
          NEO4J_AUTH: neo4j/test
          NEO4J_PLUGINS: '["apoc"]'
        ports:
          - 7687:7687
        options: --health-cmd "cypher-shell -u neo4j -p test 'RETURN 1'" --health-interval 10s --health-timeout 5s --health-retries 5
      falkordb:
        image: falkordb/falkordb:latest
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.2
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Wait for databases
        run: |
          timeout 60 bash -c 'until redis-cli -h localhost -p 6379 ping; do sleep 1; done'
          timeout 60 bash -c 'until cypher-shell -a bolt://localhost:7687 -u neo4j -p test "RETURN 1"; do sleep 1; done'
      - name: Run Neo4j integration tests
        env:
          PYTHONPATH: ${{ github.workspace }}
          NEO4J_URI: bolt://localhost:7687
          NEO4J_USER: neo4j
          NEO4J_PASSWORD: test
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: poetry run pytest tests/test_graphiti_int.py tests/test_node_int.py -v -m "integration"
      - name: Run FalkorDB integration tests
        env:
          PYTHONPATH: ${{ github.workspace }}
          FALKORDB_HOST: localhost
          FALKORDB_PORT: 6379
        run: poetry run pytest tests/driver/test_falkordb_driver.py -v -m "integration"
