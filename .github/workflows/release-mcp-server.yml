name: Release MCP Server

on:
  push:
    tags: ["mcp-v*.*.*"]

env:
  REGISTRY: docker.io
  IMAGE_NAME: zepai/knowledge-graph-mcp

jobs:
  release:
    runs-on: depot-ubuntu-24.04-small
    permissions:
      contents: write
      id-token: write
    environment:
      name: release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Extract and validate version
        id: version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/mcp-v}

          if ! [[ $TAG_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Tag must follow semantic versioning: mcp-vX.Y.Z"
            exit 1
          fi

          PROJECT_VERSION=$(python -c "import tomllib; print(tomllib.load(open('mcp_server/pyproject.toml', 'rb'))['project']['version'])")

          if [ "$TAG_VERSION" != "$PROJECT_VERSION" ]; then
            echo "Tag version mcp-v$TAG_VERSION does not match mcp_server/pyproject.toml version $PROJECT_VERSION"
            exit 1
          fi

          echo "version=$PROJECT_VERSION" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Depot CLI
        uses: depot/setup-action@v1

      - name: Extract metadata
        id: meta
        run: |
          # Get build date and git ref
          echo "build_date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
          echo "vcs_ref=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build Docker image (temp for version extraction)
        uses: depot/build-push-action@v1
        with:
          project: v9jv1mlpwc
          context: ./mcp_server
          platforms: linux/amd64
          push: false
          load: true
          tags: temp-image:latest
          build-args: |
            MCP_SERVER_VERSION=${{ steps.version.outputs.version }}
            BUILD_DATE=${{ steps.meta.outputs.build_date }}
            VCS_REF=${{ steps.meta.outputs.vcs_ref }}

      - name: Extract Graphiti Core version
        id: graphiti
        run: |
          # Extract graphiti-core version from the built image
          GRAPHITI_VERSION=$(docker run --rm temp-image:latest cat /app/.graphiti-core-version)
          echo "graphiti_version=${GRAPHITI_VERSION}" >> $GITHUB_OUTPUT
          echo "Graphiti Core Version: ${GRAPHITI_VERSION}"

      - name: Generate Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=${{ steps.version.outputs.version }}-graphiti-${{ steps.graphiti.outputs.graphiti_version }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=Graphiti MCP Server
            org.opencontainers.image.description=MCP server for Graphiti knowledge graph
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.vendor=Zep AI
            graphiti.core.version=${{ steps.graphiti.outputs.graphiti_version }}

      - name: Build and push Docker image
        uses: depot/build-push-action@v1
        with:
          project: v9jv1mlpwc
          context: ./mcp_server
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            MCP_SERVER_VERSION=${{ steps.version.outputs.version }}
            BUILD_DATE=${{ steps.meta.outputs.build_date }}
            VCS_REF=${{ steps.meta.outputs.vcs_ref }}

      - name: Create release summary
        run: |
          echo "## MCP Server Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**MCP Server Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Graphiti Core Version:** ${{ steps.graphiti.outputs.graphiti_version }}" >> $GITHUB_STEP_SUMMARY
          echo "**VCS Ref:** ${{ steps.meta.outputs.vcs_ref }}" >> $GITHUB_STEP_SUMMARY
          echo "**Build Date:** ${{ steps.meta.outputs.build_date }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Docker Image Tags" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.docker_meta.outputs.tags }}" | tr ',' '\n' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
